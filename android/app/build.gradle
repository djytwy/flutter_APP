def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.mob.sdk'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// 打包apk文件所需
def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.app_tims_hotel"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
             //科大讯飞语音识别添加的对应 cpu 类型的 .so 库。
             abiFilters 'armeabi', 'armeabi-v7a', 'x86', 'x86_64', 'mips', 'mips64', 'arm64-v8a'       
        }
        manifestPlaceholders = [
            JPUSH_PKGNAME : applicationId,
            JPUSH_APPKEY : "d23802923382b5615478c5b5", // NOTE: JPush 上注册的包名对应的 Appkey.
            JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    // 打包APK
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.20'
}

MobSDK {
    appKey "2cac68f35ef1c"
    appSecret "88479ad36e6a58c7a0dde798b27de341"

    MobPush {
        devInfo {
            XIAOMI {
                appId "2882303761518195968"
                appKey "5791819546968"
            }

//            HUAWEI {
//                appId "100215127"
//            }
//
//            MEIZU {
//                appId "112481"
//                appKey "03dd70b9be434446a7255c8586e1725a"
//            }

//            FCM {
//                //设置默认推送通知显示图标
//                iconRes "@mipmap/default_ic_launcher"
//            }
//            OPPO {
//                appKey "b61Da76NM74gsG0o8C484g8GO"
//                appSecret "659C583033aE8Ffe45a0e867c70746Af"
//            }
//            VIVO {
//                appId "11154"
//                appKey "0afbe1b7-b850-4d45-8cee-c57cceff652e"
//            }
        }
    }
}